#include <Arduino.h>
// const char index_html[] PROGMEM = R"rawliteral()rawliteral";

const char index_html[] PROGMEM = R"rawliteral(<!DOCTYPE html> <html>  <head>   <meta charset="UTF-8">   <meta name="viewport" content="width=device-width, initial-scale=1.0">   <title>Joystick 2D</title>   <style>     body {       background: #111;       color: white;       font-family: sans-serif;       display: flex;       flex-direction: column;       align-items: center;       justify-content: center;       height: 100vh;       overflow: hidden;       touch-action: none;   /* avoids scroll on mobile */     }      .joystick-container {       position: relative;       width: 200px;       height: 200px;       background: #222;       border: 3px solid #555;       border-radius: 17%;       display: flex;       align-items: center;       justify-content: center;       touch-action: none;       -webkit-user-select: none;       user-select: none;     }      .stick {       position: absolute;       width: 60px;       height: 60px;       background: #00bcd4;       border-radius: 50%;       transition: 0.05s;       cursor: grab;     }      .text {       margin-top: 20px;       margin-bottom: 20px;       font-size: 1.2em;     }   </style> </head>  <body>   <div class="text" id="ws_info">Connecting...</div>   <div class="joystick-container" id="joystick">     <div class="stick" id="stick"></div>   </div>   <div class="text" id="coords">X: 0, Y: 0</div>    <script>     /* websocket init */     const ws_info = document.getElementById('ws_info');      let connection = new WebSocket("ws://192.168.4.1/ws");     connection.onopen = function () {       connection.send("Connected device " + new Date());       ws_info.textContent = `Connected!`;       ws_info.style.color = "#069c56";     };     connection.onerror = function (error) {       console.log("WebSocket Error ", error);       ws_info.textContent = `WebSocket error`;       ws_info.style.color = "#d3212c";     };     connection.onmessage = function (e) {       console.log("Received: ", e.data);     };   </script>   <script>     /* joystick logic */     const joystick = document.getElementById('joystick');     const stick = document.getElementById('stick');     const coords = document.getElementById('coords');      const maxRadius = 80;              /* max distance from the center */     const center = { x: 100, y: 100 }; /* joystick center */     let dragging = false;     let oldX = 0;     let oldY = 0;      joystick.addEventListener('pointerdown', () => dragging = true);     document.addEventListener('pointerup', () => {       dragging = false;       stick.style.transform = `translate(0px, 0px)`;       coords.textContent = `X: 0, Y: 0`;       /* send coords thru ws */       if(connection.readyState === WebSocket.OPEN) connection.send(`#cord#X0;Y0`);     });     document.addEventListener('pointermove', (e) => {       if (!dragging) return;        const rect = joystick.getBoundingClientRect();       const x = e.clientX - rect.left - center.x;       const y = e.clientY - rect.top - center.y;        let limitedX = Math.min(x, maxRadius);       let limitedY = Math.min(y, maxRadius);       limitedX = Math.max(limitedX, -maxRadius);       limitedY = Math.max(limitedY, -maxRadius);        stick.style.transform = `translate(${limitedX}px, ${limitedY}px)`;        const normX = (+(limitedX / maxRadius).toFixed(1)) * 10;       const normY = (-(limitedY / maxRadius).toFixed(1)) * 10;        coords.textContent = `X: ${normX}, Y: ${normY}`;       if (oldX != normX || oldY != normY) {         oldX = normX;         oldY = normY;                  if(connection.readyState === WebSocket.OPEN) connection.send(`#cord#X${normX};Y${normY}`);       }     });   </script> </body>  </html> )rawliteral";

